plugins {
    id 'java'
    id 'groovy'
    id 'org.jetbrains.kotlin.jvm' version '1.4.21'
    id 'maven-publish'
}

group 'com.github.ptomaszek'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'io.github.microutils:kotlin-logging-jvm:2.0.2'

    testImplementation 'org.spockframework:spock-core:2.0-M4-groovy-3.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
}

test {
    useJUnitPlatform {
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = project.name
                description = 'Numeric range parser'
                url = 'https://github.com/ptomaszek/numeric-range-parser'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://choosealicense.com/licenses/mit/'
                    }
                }
                developers {
                    developer {
                        id = 'ptomaszek'
                        name = 'Pawe≈Ç Tomaszek'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/ptomaszek/numeric-range-parser'
                    url = 'https://github.com/ptomaszek/numeric-range-parser'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            if (project.version.endsWith('-SNAPSHOT')) {
                url "https://oss.sonatype.org/content/repositories/snapshots"
            } else {
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            }
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}
